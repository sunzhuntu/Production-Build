{"ast":null,"code":"var _jsxFileName = \"/Users/zhusun/Others/MQ-Teaching/Teaching/COMP3120-2020-S2/Code/Week3/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  eventHandler,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: eventHandler,\n    children: [\" \", text, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst Display = ({\n  text,\n  view\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of \", text, \"\\uFF1A \", view, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Display;\n\nconst App = () => {\n  _s();\n\n  const [view, setView] = useState(0); // const handleViewIncrease = () => setView(view+1)\n  // const handleViewDecrease = () => setView(view-1)\n  // const handleViewReset = () => setView(0)\n\n  const handleView = newValue => {\n    setView(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      text: \"View\",\n      view: view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      eventHandler: () => handleView(view + 1),\n      text: \"Increase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      eventHandler: () => handleView(view - 1),\n      text: \"Decrease\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      eventHandler: () => handleView(0),\n      text: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"SwK5BdS/wa3bOdWuyIZ110KqhF8=\");\n\n_c3 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Display\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/zhusun/Others/MQ-Teaching/Teaching/COMP3120-2020-S2/Code/Week3/src/index.js"],"names":["React","useState","ReactDOM","reportWebVitals","Button","eventHandler","text","Display","view","App","setView","handleView","newValue","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAA0B;AACvC,sBACE;AAAQ,IAAA,OAAO,EAAED,YAAjB;AAAA,oBAAiCC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;KAAMF,M;;AAMN,MAAMG,OAAO,GAAG,CAAC;AAACD,EAAAA,IAAD;AAAOE,EAAAA;AAAP,CAAD,KAAkB;AAChC,sBACE;AAAA,6BAAcF,IAAd,aAAsBE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;MAAMD,O;;AAMN,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAK,CAACD,IAAD,EAAOE,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAA/B,CADgB,CAGhB;AACA;AACA;;AAEA,QAAMU,UAAU,GAAIC,QAAD,IAAc;AAC/BF,IAAAA,OAAO,CAACE,QAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC,MAAd;AAAqB,MAAA,IAAI,EAAEJ;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,MAAMG,UAAU,CAACH,IAAI,GAAC,CAAN,CAAtC;AAAgD,MAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,MAAKG,UAAU,CAACH,IAAI,GAAC,CAAN,CAArC;AAA+C,MAAA,IAAI,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,MAAKG,UAAU,CAAC,CAAD,CAArC;AAA0C,MAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnBD;;GAAMF,G;;MAAAA,G;AAqBNP,QAAQ,CAACW,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAZ,eAAe","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst Button = ({eventHandler, text}) => {\n  return(\n    <button onClick={eventHandler}> {text} </button>\n  )\n}\n\nconst Display = ({text, view}) => {\n  return(\n    <p>Number of {text}ï¼š {view} </p>\n  )\n}\n\nconst App = () => {\n  const[view, setView] = useState(0)\n  \n  // const handleViewIncrease = () => setView(view+1)\n  // const handleViewDecrease = () => setView(view-1)\n  // const handleViewReset = () => setView(0)\n\n  const handleView = (newValue) => {\n    setView(newValue)\n  }\n\n  return (\n    <div>\n      <Display text='View' view={view}/>\n      <Button eventHandler={() => handleView(view+1)} text='Increase'/>\n      <Button eventHandler={() =>handleView(view-1)} text='Decrease' />\n      <Button eventHandler={() =>handleView(0)} text='Reset' />\n    </div>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}